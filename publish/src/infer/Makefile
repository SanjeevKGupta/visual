#
# Makefile for tflite : Tensor Flow Lite OpenCV Object Classification
#

# Check all necessary environment variables
-include ../../env.check.mk

export ARCH ?= $(shell hzn architecture)

# Import variables from hzn.json (file is generated by last target in this file)
-include .hzn.json.tmp.mk

# Build the docker container
tflite-build:
	 envsubst < ./Dockerfile.tflite.$(ARCH) | docker build -t $(DOCKER_IMAGE_BASE_TFLITE)_$(ARCH):$(SERVICE_VERSION_TFLITE) . -f -

vino-build:
	 envsubst < ./Dockerfile.vino.$(ARCH) | docker build -t $(DOCKER_IMAGE_BASE_VINO)_$(ARCH):$(SERVICE_VERSION_VINO) . -f -

# Push the docker container to the DockerHub registry
tflite-push:
	docker push $(DOCKER_IMAGE_BASE_TFLITE)_$(ARCH):$(SERVICE_VERSION_TFLITE)

vino-push:
	docker push $(DOCKER_IMAGE_BASE_VINO)_$(ARCH):$(SERVICE_VERSION_VINO)

# Publish a Horizon service (per service.json) and pull image to get its sha256
tflite-publish-service:
	hzn exchange service publish -f horizon/$(IMAGE_NAME_TFLITE).service.definition.json --pull-image

vino-publish-service:
	hzn exchange service publish -f horizon/$(IMAGE_NAME_VINO).service.definition.json --pull-image

tflite-deploy-policy:
	hzn exchange deployment addpolicy -f horizon/$(IMAGE_NAME_TFLITE).deploy.policy.json deploy-$(EDGE_OWNER).$(EDGE_DEPLOY).$(IMAGE_NAME_TFLITE)_$(ARCH)

vino-deploy-policy:
	hzn exchange deployment addpolicy -f horizon/$(IMAGE_NAME_VINO).deploy.policy.json deploy-$(EDGE_OWNER).$(EDGE_DEPLOY).$(IMAGE_NAME_VINO)_$(ARCH)

#-------------------------------
test-docker-run-tflite:
	docker run -it --device=/dev/video0:/dev/video0 --env-file ENV_FILE $(DOCKER_IMAGE_BASE_TFLITE)_$(ARCH):$(SERVICE_VERSION_TFLITE) /bin/bash

test-docker-run-vino:
	docker run -it --device=/dev/video0:/dev/video0 --env-file ENV_FILE --privileged -v /dev:/dev --network=host --mount type=bind,source=/tmp,target=/test $(DOCKER_IMAGE_BASE_VINO)_$(ARCH):$(SERVICE_VERSION_VINO) /bin/bash 

# Remove the local container image
clean:
	rm -f .hzn.json.tmp.mk

# This imports the variables from hzn.json
.hzn.json.tmp.mk: horizon/hzn.json
	@ hzn util configconv -f $< > $@

